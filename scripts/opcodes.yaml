# Opcode dumps

opcodes:
  # Arithmetic
  - id: ADD
    scan: ADD
    consume: 2
    produce: 1
  - id: SUB
    scan: SUB
    consume: 2
    produce: 1
  - id: HMUL
    scan: HMUL
    consume: 2
    produce: 1
  - id: HDIV
    scan: HDIV
    consume: 2
    produce: 1
  - id: MUL
    scan: MUL
    consume: 2
    produce: 1
  - id: DIV
    scan: DIV
    consume: 2
    produce: 1

  # Logical
  - id: AND
    scan: AND
    consume: 2
    produce: 1
  - id: OR
    scan: OR
    consume: 2
    produce: 1
  - id: NOT
    scan: NOT
    consume: 2
    produce: 1
  - id: XOR
    scan: XOR
    consume: 2
    produce: 1
  - id: LSL
    scan: LSL
    consume: 2
    produce: 1
  - id: LSR
    scan: LSR
    consume: 2
    produce: 1
  - id: ROL
    scan: ROL
    consume: 2
    produce: 1
  - id: ROR
    scan: ROR
    consume: 2
    produce: 1

  # Word Manipulation
  - id: ROTATE_RIGHT_BYTE
    scan: RBYTE
    consume: 1
    produce: 1
  - id: ROTATE_RIGHT_WORD
    scan: RHWD
    consume: 1
    produce: 1
  - id: EXTRACT_RIGHT_BYTE
    Varients:
      - id: 1
        scan: XBYTE_1
        consume: 1
        produce: 1
      - id: 2
        scan: XBYTE_2
        consume: 1
        produce: 1
      - id: 3
        scan: XBYTE_3
        consume: 1
        produce: 1
      - id: 4
        scan: XBYTE_4
        consume: 1
        produce: 1
  - id: EXTRACT_RIGHT_WORD
    Varients:
      - id: 1
        scan: XWRD_1
        consume: 1
        produce: 1
      - id: 2
        scan: XWRD_2
        consume: 1
        produce: 1
  - id: INSERT_BYTE
    Varients:
      - id: 1
        scan: IBYTE_1
        consume: 2
        produce: 1
      - id: 2
        scan: IBYTE_2
        consume: 2
        produce: 1
      - id: 3
        scan: IBYTE_3
        consume: 2
        produce: 1
      - id: 4
        scan: IBYTE_4
        consume: 2
        produce: 1
  - id: INSERT_WORD
    Varients:
      - id: 1
        scan: IWRD_1
        consume: 2
        produce: 1
      - id: 2
        scan: IWRD_2
        consume: 2
        produce: 1
  # Stack & Register Manipulation
  - id: COPY
    Varients:
      - id: 1
        consume: 1
        produce: 2
      - id: 2
        consume: 2
        produce: 3
      - id: 3
        consume: 3
        produce: 4
      - id: 4
        consume: 4
        produce: 5
  - id: DROP
    Varients:
      - id: 1
        consume: 1
        produce: 0
      - id: 2
        consume: 2
        produce: 0
      - id: 3
        consume: 3
        produce: 0
      - id: 4
        consume: 4
        produce: 0
  - id: RSU
    Varients:
      - id: 2
        consume: 2
        produce: 2
      - id: 3
        consume: 3
        produce: 3
      - id: 4
        consume: 4
        produce: 4
  - id: RSD
    Varients:
      - id: 3
        consume: 3
        produce: 3
      - id: 4
        consume: 4
        produce: 4
  - id: PUSH_TO_RS
    scan: ">r"
    consume: 0
    produce: 1
  - id: POP_FROM_RS
    scan: "<r"
    consume: 1
    produce: 0
  # Some other push/pop to/from return stack?

  # Control & Compare
  - id: TEST_EQ
    flag: write
    scan: TEQ
    consume: 2
    produce: 0
  - id: TEST_NEQ
    flag: write
    scan: TNE
    consume: 2
    produce: 0
  - id: TEST_GT
    flag: write
    scan: TGT
    consume: 2
    produce: 0
  - id: TEST_LT
    flag: write
    scan: TLT
    consume: 2
    produce: 0
  - id: TEST_NEGATIVE
    flag: write
    scan: TNV
    consume: 1
    produce: 0
  - id: TEST_POSITIVE
    flag: write
    scan: TPV
    consume: 1
    produce: 0
  - id: TEST_NOT_ZERO
    flag: write
    scan: TNZ
    consume: 1
    produce: 0
  - id: TEST_XP_ZERO
    flag: write
    scan: TXPZ
    consume: 0
    produce: 0
  - id: TEST_YP_ZERO
    flag: write
    scan: TYPZ
    consume: 0
    produce: 0

  # Unconditional
  - id: RELATIVE_JUMP
    scan: BP
    branching: true
    consume: 0
    produce: 0
  - id: ABSOLUTE_JUMP
    scan: BL
    branching: true
    consume: 0
    produce: 0
  - id: RELATIVE_CALL
    scan: CP
    branching: true
    consume: 0
    produce: 1
  - id: ABSOLUTE_CALL
    scan: CL
    branching: true
    consume: 0
    produce: 1
  - id: RETURN
    scan: EXIT
    branching: true
    consume: 1
    produce: 0

  # Conditional
  - id: COND_RELATIVE_JUMP
    scan: BCR
    branching: true
    flag: read
    consume: 0
    produce: 0
  - id: COND_PAGE_JUMP
    scan: BCP
    branching: true
    flag: read
    consume: 0
    produce: 0
  - id: COND_ABSOLUTE_JUMP
    scan: BCL
    branching: true
    flag: read
    consume: 0
    produce: 0
  - id: COND_RELATIVE_CALL
    scan: CCP
    branching: true
    flag: read
    consume: 0
    produce: 1
  - id: COND_ABSOLUTE_CALL
    scan: CCL
    branching: true
    flag: read
    consume: 0
    produce: 1
  - id: COND_RETURN
    scan: "?EXIT"
    branching: true
    flag: read
    consume: 1
    produce: 0

  # Memory & Data Access
  # push immediates (byte/word/dword)
  - id: PUSH_BYTE
    scan: LIT
    consume: 0
    produce: 1
  - id: PUSH_SHORT
    scan: LSI
    consume: 0
    produce: 1
  - id: PUSH_EXTEND
    scan: LEI
    consume: 0
    produce: 1
  - id: PUSH_FRAME_ADDR
    scan: "@LOC"
    consume: 0
    produce: 1
    ram: read
    address: op1
  - id: POP_FRAME_ADDR
    scan: "!LOC"
    consume: 1
    produce: 0
    ram: write
    address: op1
    # push dword[page:0x1234]
  - id: PUSH_INDIRECT_RELATIVE
    scan: LDP
    consume: 0
    produce: 1
    ram: read
    address: op1
    # pop dword[page:0x1234]
  - id: POP_INDIRECT_RELATIVE
    scan: STP
    consume: 1
    produce: 0
    ram: write
    address: op1
    # push dword[0x1234]
  - id: PUSH_INDIRECT_ABSOLUTE
    scan: LDL
    consume: 0
    produce: 1
    ram: read
    address: op1
    # pop dword[0x1234]
  - id: POP_INDIRECT_ABSOLUTE
    scan: STL
    consume: 1
    produce: 0
    ram: write
    address: op1
    # pop [reg]
  - id: SAVE_TO_REG
    reg:
      XP:
        scan: "!XP"
        consume: 1
        produce: 0
        access: write
      YP:
        scan: "!YP"
        consume: 1
        produce: 0
        access: write
  - id: PUSH_REG_VALUE
    reg:
      XP:
        scan: "@XP"
        consume: 0
        produce: 1
        access: read
      YP:
        scan: "@YP"
        consume: 0
        produce: 1
        access: read
  - id: POP_REGISTER
    reg:
      # mov [sp + 0], [sp + 1]
      # pop; pop;
      NOS:
        scan: "!"
        access: read
        consume: 2
        produce: 0
        ram: write
        address: unknown
      TOS:
        scan: "![TOS]"
        access: read
        consume: 2
        produce: 0
        ram: write
        address: unknown
      # pop [XP]
      XP:
        scan: "![XP]"
        access: read
        consume: 1
        produce: 0
        ram: write
        address: unknown
      # pop [YP]
      YP:
        scan: "![YP]"
        access: read
        consume: 1
        produce: 0
        ram: write
        address: unknown
    # push [reg]
  - id: PUSH_REGISTER
    reg:
      # Remove content at TOS and push it.
      # pop temp_reg; push [temp_reg]
      TOS:
        scan: ["@", "@[TOS]"]
        access: read
        consume: 1
        produce: 1
        ram: read
        address: unknown
      # push [XP]
      XP:
        scan: "@[XP]"
        access: read
        consume: 0
        produce: 1
        ram: read
        address: unknown
      # push [YP]
      YP:
        scan: "@[YP]"
        access: read
        consume: 0
        produce: 1
        ram: read
        address: unknown
    # pop [reg]; inc reg
  - id: POP_REGISTER_INC
    reg:
      XP:
        scan: "![XP++]"
        access: write
        consume: 1
        produce: 0
        ram: write
        address: unknown
      YP:
        scan: "![YP++]"
        access: write
        consume: 1
        produce: 0
        ram: write
        address: unknown
    # pop [reg]; dec reg
  - id: POP_REGISTER_DEC
    reg:
      XP:
        scan: "![XP--]"
        access: write
        consume: 1
        produce: 0
        ram: write
        address: unknown
      YP:
        scan: "![YP--]"
        access: write
        consume: 1
        produce: 0
        ram: write
        address: unknown
    # push [reg]; inc reg
  - id: PUSH_REGISTER_INC
    reg:
      XP:
        scan: "@[XP++]"
        access: write
        consume: 0
        produce: 1
        ram: read
        address: unknown
      YP:
        scan: "@[YP++]"
        access: write
        consume: 0
        produce: 1
        ram: read
        address: unknown
    # pop [reg]; dec reg
  - id: PUSH_REGISTER_DEC
    reg:
      XP:
        scan: "@[XP--]"
        access: write
        consume: 0
        produce: 1
        ram: write
        address: unknown
      YP:
        scan: "@[YP--]"
        access: write
        consume: 0
        produce: 1
        ram: write
        address: unknown
  - id: REG_ADD
    reg:
      SP:
        scan: SP+
        consume: 1
        produce: 0
        access: write
      RP:
        scan: RP+
        consume: 1
        produce: 0
        access: write
      YP:
        scan: YP+
        consume: 1
        produce: 0
        access: write
      XP:
        scan: XP+
        consume: 1
        produce: 0
        access: write
      FP:
        scan: FP+
        consume: 1
        produce: 0
        access: write
  - id: REG_SUB
    reg:
      SP:
        scan: SP-
        consume: 1
        produce: 0
        access: write
      RP:
        scan: RP-
        consume: 1
        produce: 0
        access: write
      YP:
        scan: YP-
        consume: 1
        produce: 0
        access: write
      XP:
        scan: XP-
        consume: 1
        produce: 0
        access: write
      FP:
        scan: FP-
        consume: 1
        produce: 0
        access: write
  - id: REG_INC
    reg:
      SP:
        scan: SP++
        consume: 0
        produce: 0
        access: write
      RP:
        scan: RP++
        consume: 0
        produce: 0
        access: write
      YP:
        scan: YP++
        consume: 0
        produce: 0
        access: write
      XP:
        scan: XP++
        consume: 0
        produce: 0
        access: write
      FP:
        scan: FP++
        consume: 0
        produce: 0
        access: write
      TOS:
        scan: TOS++
        consume: 0
        produce: 0
        access: write
  - id: REG_DEC
    reg:
      SP:
        scan: SP--
        consume: 0
        produce: 0
        access: write
      RP:
        scan: RP--
        consume: 0
        produce: 0
        access: write
      YP:
        scan: YP--
        consume: 0
        produce: 0
        access: write
      XP:
        scan: XP--
        consume: 0
        produce: 0
        access: write
      FP:
        scan: FP--
        consume: 0
        produce: 0
        access: write
      TOS:
        scan: TOS--
        consume: 0
        produce: 0
        access: write
